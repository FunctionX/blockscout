<% staking_enabled_in_menu = Application.get_env(:block_scout_web, BlockScoutWeb.Chain)[:staking_enabled_in_menu] %>
<% apps_menu = Application.get_env(:block_scout_web, :apps_menu) %>
<%= if true do %>
<nav class="fx-navbar fx">
    <div class="fx-container">
        <div class="fixed-filter"></div>
        <div class="logo flex">
            <a href="https://explorer.functionx.io/">
                <img alt="Function X Explorer" srcset="" src="/images/web_home_nav_icon_logo.svg"/>
            </a>
            <div class="layout-search-common">
                <a class="back-link" href="https://functionx.io" target="_blank" rel="noopener noreferrer">
                    <i class="icon icon-back"></i>
                    <strong>Back to Function X</strong>
                </a>
            </div>
            <div class="app-nav">
                <i class="icon icon-app-nav-menu"></i>
                <i class="icon icon-app-nav-close"></i>
            </div>
        </div>
        <nav class="phone-not-show flex-center">
            <a href="https://explorer.functionx.io/" target="_blank" rel="noopener noreferrer" ><i class="icon icon-head-home"></i><strong>Home</strong></a>
            <a href="https://explorer.functionx.io/fxcore/blocks" target="_blank" rel="noopener noreferrer" ><i class="icon icon-head-blocks"></i><strong>Blocks</strong></a>
            <a href="https://explorer.functionx.io/fxcore/txs" target="_blank" rel="noopener noreferrer" ><i class="icon icon-head-transactions"></i><strong>Transactions</strong></a>
            <a href="https://explorer.functionx.io/fxcore/validators" target="_blank" rel="noopener noreferrer" ><i class="icon icon-head-validator"></i><strong>Validator</strong></a>
            <a href="https://explorer.functionx.io/fxcore/datas" target="_blank" rel="noopener noreferrer" ><i class="icon icon-head-data"></i><strong>Data</strong></a>
            <a href="https://explorer.functionx.io/fxcore/proposals" target="_blank" rel="noopener noreferrer" ><i class="icon icon-head-data"></i><strong>Proposals</strong></a>
        </nav>
    </div>
</nav>
<% else %>
<nav class="navbar navbar-dark navbar-expand-lg navbar-primary" data-selector="navbar" id="top-navbar">
  <div class="container-fluid navbar-container">
    <%= link to: webapp_url(@conn), class: "navbar-brand", "data-test": "header_logo" do %>
      <%= if logo() do %>
        <img class="navbar-logo" id="navbar-logo" src="<%= static_path(@conn, logo()) %>" alt="<%= subnetwork_title() %>" />
      <% end %>
      <%= if logo_text() do %>
        <span class="logo-text <%= unless logo(), do: "no-logo" %>"> <%= logo_text() %> </span>
      <% end %>
    <% end %>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="<%= gettext("Toggle navigation") %>">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
      <ul class="navbar-nav">
        <%= if Application.get_env(:block_scout_web, BlockScoutWeb.WebRouter)[:enabled] do %>
          <li class="nav-item dropdown">
            <a class="nav-link topnav-nav-link dropdown-toggle" href="#" id="navbarBlocksDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <span class="nav-link-icon">
                <%= render BlockScoutWeb.IconsView, "_block_icon.html" %>
              </span>
              <%= gettext("Blocks") %>
            </a>
            <div class="dropdown-menu" aria-labelledby="navbarBlocksDropdown">
              <%= link to: blocks_path(@conn, :index), class: "dropdown-item #{tab_status("blocks", @conn.request_path)}" do %>
                <%= gettext("Blocks") %>
              <% end %>
              <%= link to: uncle_path(@conn, :uncle), class: "dropdown-item #{tab_status("uncles", @conn.request_path)}" do %>
                <%= gettext("Uncles") %>
              <% end %>
              <%= link to: reorg_path(@conn, :reorg), class: "dropdown-item #{tab_status("reorgs", @conn.request_path)}" do %>
                <%= gettext("Forked Blocks (Reorgs)") %>
              <% end %>
            </div>
          </li>
          <li class="nav-item dropdown" id="activeTransactions">
            <a href="#" role="button" id="navbarTransactionsDropdown" class="nav-link topnav-nav-link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <span class="nav-link-icon">
                <%= render BlockScoutWeb.IconsView, "_transaction_icon.html" %>
              </span>
              <%= gettext("Transactions") %>
            </a>
            <div class="dropdown-menu" aria-labeledby="navbarTransactionsDropdown">
              <%= link(
                    gettext("Validated"),
                    class: "dropdown-item #{tab_status("txs", @conn.request_path)}",
                    to: transaction_path(@conn, :index)
                  ) %>
              <% json_rpc_named_arguments = Application.fetch_env!(:indexer, :json_rpc_named_arguments)%>
              <% variant = Keyword.fetch!(json_rpc_named_arguments, :variant) %>
              <%= if variant !== EthereumJSONRPC.Besu do %>
                <%= link(
                      gettext("Pending"),
                      class: "dropdown-item #{tab_status("pending-transactions", @conn.request_path)}",
                      "data-test": "pending_transactions_link",
                      to: pending_transaction_path(@conn, :index)
                    ) %>
              <% end %>
            </div>
          </li>
          <%= if Chain.bridged_tokens_enabled?() do %>
            <li class="nav-item dropdown">
              <a href="#" role="button" id="navbarTokensDropdown" class="nav-link topnav-nav-link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="nav-link-icon">
                  <%= render BlockScoutWeb.IconsView, "_tokens_icon.html" %>
                </span>
                <%= gettext("Tokens") %>
              </a>
              <div class="dropdown-menu" aria-labeledby="navbarTransactionsDropdown">
                <%= link(
                      gettext("All"),
                      class: "dropdown-item #{tab_status("tokens", @conn.request_path)}",
                      to: tokens_path(@conn, :index)
                    ) %>
                <%= link(
                      gettext("Bridged from Ethereum"),
                      class: "dropdown-item #{tab_status("bridged-tokens/eth", @conn.request_path)}",
                      to: bridged_tokens_path(@conn, :show, :eth),
                      style: "white-space: nowrap;"
                    ) %>
                <%= link(
                      gettext("Bridged from BSC"),
                      class: "dropdown-item #{tab_status("bridged-tokens/bsc", @conn.request_path)}",
                      to: bridged_tokens_path(@conn, :show, :bsc)
                    ) %>
                <%= link(
                      gettext("Ether"),
                      class: "dropdown-item #{tab_status("accounts", @conn.request_path)}",
                      to: address_path(@conn, :index)
                    ) %>
              </div>
            </li>
          <% else %>
            <li class="nav-item dropdown">
              <a href="#" role="button" id="navbarTokensDropdown" class="nav-link topnav-nav-link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <span class="nav-link-icon">
                  <%= render BlockScoutWeb.IconsView, "_tokens_icon.html" %>
                </span>
                <%= gettext("Tokens") %>
              </a>
              <div class="dropdown-menu" aria-labeledby="navbarTransactionsDropdown">
                <%= link(
                      gettext("All"),
                      class: "dropdown-item #{tab_status("tokens", @conn.request_path)}",
                      to: tokens_path(@conn, :index)
                    ) %>
                <%= link(
                      gettext("Ether"),
                      class: "dropdown-item #{tab_status("accounts", @conn.request_path)}",
                      to: address_path(@conn, :index)
                    ) %>
              </div>
            </li>
          <% end %>
        <% end %>
        <%= if Application.get_env(:block_scout_web, BlockScoutWeb.ApiRouter)[:reading_enabled] || Application.get_env(:block_scout_web, :api_url) do %>
          <li class="nav-item dropdown">
            <a href="#" role="button" id="navbarAPIsDropdown" class="nav-link topnav-nav-link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <span class="nav-link-icon">
                <%= render BlockScoutWeb.IconsView, "_api_icon.html" %>
              </span>
              <%= gettext("APIs") %>
            </a>
            <div class="dropdown-menu" aria-labeledby="navbarTransactionsDropdown">
              <%= link(
                    gettext("GraphQL"),
                    class: "dropdown-item #{tab_status("graphiql", @conn.request_path)}",
                    to: api_url() <> "/graphiql"
                  ) %>
              <%= link(
                    gettext("RPC"),
                    class: "dropdown-item #{tab_status("api-docs", @conn.request_path)}",
                    to: api_url() <> api_docs_path(@conn, :index)
                  ) %>
              <%= link(
                    gettext("Eth RPC"),
                    class: "dropdown-item #{tab_status("eth-rpc-api-docs", @conn.request_path)}",
                    to: api_url() <> api_docs_path(@conn, :eth_rpc)
                  ) %>
            </div>
          </li>
        <% end %>
        <%= if apps_menu == true || staking_enabled_in_menu do %>
          <li class="nav-item dropdown">
            <a href="#" role="button" id="navbarAppsDropdown" class="nav-link topnav-nav-link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
              <span class="nav-link-icon">
                <%= render BlockScoutWeb.IconsView, "_apps_icon.html" %>
              </span>
              <%= if apps_menu == true do %>
                <%= gettext("Apps") %>
              <% else %>
                <%= gettext("Stakes") %>
              <% end %>
            </a>
            <div class="dropdown-menu" aria-labeledby="navbarAppsDropdown">
              <%= if staking_enabled_in_menu do %>
                <a class="dropdown-item <%= #{tab_status("validators", @conn.request_path)} %>" href="<%= validators_path(@conn, :index) %>">
                  <%= gettext("Staking") %>
                  <span class="bs-label secondary right from-dropdown">New</span>
                </a>
              <% end %>
              <%= if apps_menu == true do %>
                <%= for %{url: url, title: title} <- external_apps_list() do %>
                    <a href="<%= url %>" class="dropdown-item" target="_blank"><%= title %>
                      <span class="external-link-icon">
                        <%= render BlockScoutWeb.IconsView, "_external_link.html" %>
                      </span>
                    </a>
                <% end %>
              <% end %>
            </div>
          </li>
        <% end %>
        <li class="nav-item dropdown">
          <a class="nav-link topnav-nav-link active-icon <%= if dropdown_nets() != [], do: "dropdown-toggle js-show-network-selector" %>" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <span class="nav-link-icon">
              <%= render BlockScoutWeb.IconsView, "_active_icon.html" %>
            </span>
            <%= subnetwork_title() %>
          </a>
          <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdown">
            <a class="dropdown-item header division">Mainnets</a>
            <%= for %{url: url, title: title} <- dropdown_head_main_nets() do %>
              <a class="dropdown-item" href="<%= url %>"><%= title %></a>
            <% end %>
            <a class="dropdown-item header division">Testnets</a>
            <%= for %{url: url, title: title} <- test_nets(dropdown_nets()) do %>
              <a class="dropdown-item" href="<%= url %>"><%= title %></a>
            <% end %>
            <a class="dropdown-item header division">Other Networks</a>
            <%= for %{url: url, title: title} <- dropdown_other_nets() do %>
              <a class="dropdown-item" href="<%= url %>"><%= title %></a>
            <% end %>
          </div>
        </li>
      </ul>
      <!-- Dark mode changer -->
      <button class="dark-mode-changer" id="dark-mode-changer">
        <svg xmlns="http://www.w3.org/2000/svg" width="15" height="16">
            <path fill="#9B62FF" fill-rule="evenodd" d="M14.88 11.578a.544.544 0 0 0-.599-.166 5.7 5.7 0 0 1-1.924.321c-3.259 0-5.91-2.632-5.91-5.866 0-1.947.968-3.759 2.59-4.849a.534.534 0 0 0-.225-.97A5.289 5.289 0 0 0 8.059 0C3.615 0 0 3.588 0 8s3.615 8 8.059 8c2.82 0 5.386-1.423 6.862-3.806a.533.533 0 0 0-.041-.616z"/>
        </svg>
      </button>
      <%= render BlockScoutWeb.LayoutView, "_search.html", conn: @conn, id: "main-search-autocomplete", additional_classes: ["mobile-search-hide"] %>
    </div>
  </div>
  <%= render BlockScoutWeb.LayoutView, "_search.html", conn: @conn, id: "main-search-autocomplete-mobile", additional_classes: ["mobile-search-show"] %>
</nav>
<% end %>
<script>
    const menuEl =  document.querySelector('.icon-app-nav-menu')
    const closeEl =  document.querySelector('.icon-app-nav-close')
    const navEl = document.querySelector('.fx-navbar')
    navEl.addEventListener('click', function (e) {
        if (e.target === menuEl) {
            navEl.classList.add('show')
        } else if (e.target === closeEl) {
            navEl.classList.remove('show')
        }
    })
</script>
<style>
    :root{
        --fx-main-color: #080a32;
        --fx-sec-color: rgba(8,10,50,.5);
        --fx-body-bg: #fbfbfb;
        --fx-line-color: #f6f6f6;
        --fx-link-color: #0552dc;
    }
    a{
        color: var(--fx-main-color);
    }
    a:hover{
        color: var(--fx-link-color);
    }
    .card{
        border-radius: 36px;
        box-shadow: 0 0 30px 0 rgba(202,199,226,0);
        font-family: "cmr_regular","Helvetica Neue","PingFang SC","Microsoft YaHei","Simsun",Helvetica,Arial,Verdana,sans-serif;
        -webkit-font-smoothing: antialiased;
    }
    .card.card-chain-blocks{
        background-color: var(--fx-body-bg);
    }
    .card-body{
        padding: 32px;
    }
    .card-title{
        font-size: 48px;
        line-height: 1.5em;
        font-family: "cmr_medium","Helvetica Neue","PingFang SC","Microsoft YaHei","Simsun",Helvetica,Arial,Verdana,sans-serif;
    }
    .btn-line{
        border-color: transparent;
        background-color: transparent;
        font-family: "cmr_medium","Helvetica Neue","PingFang SC","Microsoft YaHei","Simsun",Helvetica,Arial,Verdana,sans-serif;
        color: var(--fx-main-color);
        font-size: 14px;
        line-height: 1.5em;
    }
    .btn-line:hover{
        background-color: transparent;
        color: var(--fx-link-color);
        text-decoration: none;
    }
    .btn-line:after{
        content: '';
        background-image: url('../fonts/arrow.svg');
        display: inline-block;
        width: 11px;
        height: 7px;
        vertical-align: middle;
        margin-left: .5em;
    }
    .tile.tile-type-block{
        border-radius: 16px;
        transition: box-shadow 0.8s;
        border: 1px solid rgba(8,10,50,.06);
        text-align: center;
    }
    .tile.tile-type-block:before{
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        opacity: 0;
        transition: opacity .3s ease;
        background-image: linear-gradient(180deg,#ecf2fd,#fff);
    }
    .tile.tile-type-block:hover{
        box-shadow: 0 8px 20px 0 rgba(8,10,50,.06);
    }
    .tile.tile-type-block:hover:before{
        opacity: 1;
    }


    .tile{
        padding: 32px;
    }
    .tile.tile-type-block .tile-title{
        transition: color .3s ease;
        color: var(--fx-main-color);
        font-size: 24px;
        line-height: 24px;
        text-decoration: none;
    }
    .tile.tile-type-block .tile-title:hover{
        color: var(--fx-link-color);
    }
    .tile-bottom-contents{
        background-color: transparent;
    }
    .tile-transactions{
        text-align: center;
    }

    .tile .tile-body{
        font-size: 14px;
        line-height: 1.5em;
    }
    .row.tile-body>.d-flex.flex-column>span:not(:nth-last-of-type(1)){
        margin-bottom: 12px;
    }
    .tile .tile-body a, .tile a[data-test=token_link], .tile span[data-address-hash]{
        color: var(--fx-main-color);
    }
    .tile .tile-body a{
        font-size: 14px;
        line-height: 1.5em;
    }
    .tile .tile-body a:hover, .tile a[data-test=token_link]:hover, .tile a:hover span[data-address-hash]{
        color: var(--fx-link-color);
    }

    .tile .tile-title{
        color: var(--fx-main-color);
        font-size: 14px;
        line-height: 1.5em;
    }
    .tile .text-nowrap{
        color: var(--fx-sec-color);
    }
    .tile .tile-bottom a{
        font-size: 16px;
        line-height: 28px;
        font-family: "cmr_medium","Helvetica Neue","PingFang SC","Microsoft YaHei","Simsun",Helvetica,Arial,Verdana,sans-serif;
    }

    section[data-page=transaction-details] .card .card-title,.card-title.list-title-description{
        font-size: 28px;
        line-height: 36px;
    }
    section[data-page=transaction-details] .card .card-body{
        transform: translate(0, 0);
        position: relative;
    }
    section[data-page=transaction-details] .card .card-body:before{
        content: '';
        position: absolute;
        z-index: -1;
        background-color: var(--fx-body-bg);
        top: 108px;
        left: 0;
        right: 0;
        bottom: 0;
        border-radius: 18px;
    }
    section[data-page=transaction-details] .card .row{
        margin-top: 32px;
        margin-bottom: 0;
    }
    section[data-page=transaction-details] .card .row .text-muted{
        color: var(--fx-sec-color)!important;
    }
    section[data-page=transaction-details] .card .row a{
        color: var(--fx-main-color);
    }
    section[data-page=transaction-details] .card .row a:hover{
        color: var(--fx-link-color);
        text-decoration: none;
    }
    section[data-page=transaction-details] .card .row span[data-transaction-status],section[data-page=transaction-details] .card .row span[data-transaction-status] i:before{
        color: var(--fx-main-color);
    }
    section[data-page=transaction-details] .card .row .large{
        background-color: #f8f9fa;
        color: var(--fx-sec-color);
    }
    .card code{
        color: var(--fx-sec-color);
    }
    .btn-copy-icon.btn-copy-icon-small path{
        fill: var(--fx-main-color)
    }

    .card-tab{
        color: var(--fx-sec-color);
    }
    .card-tab.active{
        background-color: var(--fx-line-color);
        color: var(--fx-main-color);
    }
    .card-tab:hover{
        background-color: var(--fx-body-bg);
        color: var(--fx-main-color);
    }



    .icon-app-nav-menu{
        display: block;
    }
    .icon-app-nav-close{
        display: none;
    }
    .fixed-filter{
        display: none;
    }
    .fx-navbar.show .icon-app-nav-menu{
            display: none;
    }
    .fx-navbar.show .icon-app-nav-close{
        display: block;
    }
    .fx-navbar.show .fixed-filter{
        display: block;
    }
    .icon-app-nav-menu,.icon-app-nav-close{
        cursor: pointer;
    }

    @media screen and (max-width: 1199px) {
        .fx-navbar nav{
            display: none;
        }
        .fx-navbar.show nav{
            display: block;
        }
    }

</style>